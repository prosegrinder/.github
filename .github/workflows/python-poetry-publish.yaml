name: Bump, Release, and Publish

on:
  workflow_call:
    inputs:
      newversion:
        description: "Bump Type (major minor patch)"
        default: "patch"
        required: true
        type: string
      testpublish:
        description: "Publish to TestPypi"
        default: false
        type: boolean
    secrets:
      TEST_PYPI_API_TOKEN:
        required: true
      PYPI_API_TOKEN:
        required: true
      VERSION_BUMP_TAG_TOKEN:
        required: true

  # workflow_dispatch:
  #   branches:
  #     - main
  #   inputs:
  #     newversion:
  #       description: "Bump Type (major minor patch)"
  #       required: true
  #       default: "patch"
  #       type: choice
  #       options:
  #         - patch
  #         - minor
  #         - major
  #     testpublish:
  #       description: "Publish to TestPypi"
  #       default: false
  #       type: boolean

concurrency:
  group: tag-and-release
  cancel-in-progress: true

jobs:
  lint:
    uses: prosegrinder/.github/.github/workflows/python-lint.yaml@main

  test:
    needs: lint
    uses: prosegrinder/.github/.github/workflows/python-poetry-test.yaml@main

  build-publish-tag-release:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0
          submodules: true
      - name: Set up Python
        uses: actions/setup-python@v4
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Bump Version
        run: poetry version ${{ inputs.newversion }}
      - name: Get New Version
        id: get-new-version
        run: |
          echo "version=$(poetry version -s)" >> $GITHUB_OUTPUT
      - name: Install dependencies
        run: poetry install --with dev --no-interaction --no-root
      - name: Install project
        run: poetry install --with dev --no-interaction
      - name: Poetry Build
        run: |
          poetry build
      - name: Upload Disttributions
        uses: actions/upload-artifact@v3
        with:
          name: dists
          path: dists/
      - name: Poetry Publish to PyPi Test
        if: ${{ 'true' == inputs.testpublish }}
        run: |
          poetry config repositories.testpypi https://test.pypi.org/legacy/
          poetry publish --repository testpypi --no-interaction --skip-existing
        env:
          POETRY_PYPI_TOKEN_TESTPYPI: ${{ secrets.TEST_PYPI_API_TOKEN }}
      - name: Poetry Publish to PyPi
        run: |
          poetry publish --no-interaction
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}
      - name: Commit & Push changes
        uses: actions-js/push@v1.3
        with:
          author_email: david@davidlday.com
          author_name: ${{ github.actor }}
          message:
            "[skip ci] bumped to ${{ steps.get-new-version.outputs.version }}"
          github_token: ${{ secrets.VERSION_BUMP_TAG_TOKEN }}
      - name: Tag version
        id: tag-version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          custom_tag: ${{ steps.get-new-version.outputs.version }}
          create_annotated_tag: true
          github_token: ${{ secrets.VERSION_BUMP_TAG_TOKEN }}
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag-version.outputs.new_tag }}
          name: ${{ steps.tag-version.outputs.new_tag }}
          body: ${{ steps.tag-version.outputs.changelog }}
